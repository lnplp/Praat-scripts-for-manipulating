##################################################################################################
## This script changes the duration of two consecutive Textgrid intervals through PSOLA resynthesis to
## a user-specified target duration. The manipulation is not exact, but probably close enough for
## most purposes. The way the duration points are added means that the intervals do not need to cover
## the entire file duration, but they do need to be consecutive. The script should also only be 
## be run on files that all have the specific intervals. If they have only one, the script will
## probably produce inaccurate results because of the way duration points are added. (I've saved separate
## versions of the script for manipulating just one interval and manipulating three intervals.)
##
## The duration should be specified in milliseconds; this is converted into seconds where appropriate.
##
## The script is a simplified version of a more elaborate manipulation script written by Rachel Smith
## (University of Glasgow). 
##
## Last edited by Leendert Plug, June 2019.
###################################################################################################

form Specify directories and parameters for analysis
   	comment Which directory contains your sound files?
	text sounddirectory ...\
 	comment Which tier of the TextGrid object would you like to analyse?
	integer tier 2
	comment Specify the label of the first interval you want to measure over.
	sentence Interval1 1
	comment Desired first interval duration in ms:	
	natural iMs1 1000
	comment Specify the label of the second interval you want to measure over.
	sentence Interval2 2
	comment Desired first interval duration in ms:	
	natural iMs2 500
	comment Where would you like to store your new files?
	text outputdirectory ...\
endform

##convert iMs to seconds
iSec1 = iMs1/1000
iSec2 = iMs2/1000

##find all wav files in the directory matching desired pattern
Create Strings as file list... list 'sounddirectory$'\*.wav  
number_files = Get number of strings

##start the main loop
for a from 1 to number_files
	select Strings list
	current_file$ = Get string... 'a'
	printline Processing file: 'current_file$'...      
	base$ = replace$ (current_file$, ".wav", "", 0)
	Read from file... 'sounddirectory$'\'base$'.wav
	Read from file... 'sounddirectory$'\'base$'.TextGrid

	##select the TextGrid and get its end time and thus total duration
	select TextGrid 'base$'
	totalDur = Get end time
	
	##check how many intervals there are in the selected tier:
	numberOfIntervals = Get number of intervals... tier

	##extract interval duration measures from the tier:
	for interval from 1 to numberOfIntervals
		label$ = Get label of interval... tier interval
		if label$ = interval1$
			iStart1 = Get starting point... tier interval
			iEnd1 = Get end point... tier interval
			iDuration1 = iEnd1 - iStart1
			printline Interval duration = 'iDuration1:3' 
		endif
		if label$ = interval2$
			iStart2 = Get starting point... tier interval
			iEnd2 = Get end point... tier interval
			iDuration2 = iEnd2 - iStart2
			printline Interval duration = 'iDuration2:3' 
		endif
	endfor

	printline Original first interval duration = 'iDuration1:3'
	printline New first interval duration = 'iSec1'
	printline Original second interval duration = 'iDuration2:3'
	printline New second interval duration = 'iSec2'

	##calculate scaling ratio to get new interval duration from old
	scaleRatio1 = iSec1/iDuration1
	printline Scaling ratio for first interval = 'scaleRatio1:3'
	scaleRatio2 = iSec2/iDuration2
	printline Scaling ratio for second interval = 'scaleRatio2:3'

	##select the Sound and make a Manipulation object:
	select Sound 'base$'
	To Manipulation... 0.01 75 600	

	##make a new duration tier and delimit the manipulation interval
	select Sound 'base$'
	Create DurationTier... 'base$'_'iMs1'_'iMs2' 0 totalDur
	Add point... 0.000 1
	Add point... iStart1 1
	Add point... iStart1+0.00001 scaleRatio1
	Add point... iEnd1 scaleRatio1
	Add point... iEnd1+0.00001 scaleRatio1
	Add point... iStart2+0.000011 scaleRatio2
	Add point... iEnd2-0.00001 scaleRatio2
	Add point... iEnd2 1
	Add point... totalDur 1

	##select Manipulation object and replace its Duration tier with the new one
	select DurationTier 'base$'_'iMs1'_'iMs2'
	plus Manipulation 'base$'
	Replace duration tier

	##resynthesise and save
	select Manipulation 'base$'
	Get resynthesis (overlap-add)
	Write to WAV file... 'outputdirectory$'\'base$'_'iMs1'_'iMs2'.wav

	##clean up by removing the temporary objects from the object list
	select Sound 'base$'
	plus TextGrid 'base$'
	plus Manipulation 'base$'
	plus DurationTier 'base$'_'iMs1'_'iMs2'
	Remove

	printline Saving new sound file 'base$'_'iMs1'_'iMs2'.wav
	printline --.

endfor