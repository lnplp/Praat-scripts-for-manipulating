###########################################################################################################
## This script changes the duration of five consecutive Textgrid intervals through PSOLA resynthesis to
## a user-specified target duration. The manipulation is not exact, but probably close enough for
## most purposes. The way the duration points are added means that the intervals do not need to cover
## the entire file duration, but they do need to be consecutive. The duration should be specified in 
## milliseconds; this is converted into seconds where appropriate.
##
## The script runs within a user-specified directory on a single user-specified file.
##
## Last edited by Leendert Plug, June 2019.
###########################################################################################################

form Specify directories and parameters for analysis
   	comment Which directory contains your sound files? (Split path where convenient.)
	text sounddir1 N:\Faculty-of-AHC\Languages-Cultures-Societies\Subject-Areas\LingPhon\Staff file space\Leendert research\corley10\Jamie-audio\recording_24_June2019\4_grouped_without_restrictive\
	text sounddir2 
    	comment What is the base name (without .wav) of the file you want to manipulate?
	text base _conjunct
	comment Which tier of the TextGrid object would you like to analyse?
	integer tier 2
	comment Specify the label of the first interval you want to measure over.
	sentence Interval1 1
	comment Desired first interval duration in ms:	
	natural iMs1 
	comment Specify the label of the second interval you want to measure over.
	sentence Interval2 2
	comment Desired second interval duration in ms:	
	natural iMs2 
	comment Specify the label of the third interval you want to measure over.
	sentence Interval3 or
	comment Desired third interval duration in ms:	
	natural iMs3 200
	comment Specify the label of the fourth interval you want to measure over.
	sentence Interval4 3
	comment Desired fourth interval duration in ms:	
	natural iMs4 
	comment Specify the label of the fifth interval you want to measure over.
	sentence Interval5 4
	comment Desired fifth interval duration in ms:	
	natural iMs5 
endform

##convert iMs to seconds
iSec1 = iMs1/1000
iSec2 = iMs2/1000
iSec3 = iMs3/1000
iSec4 = iMs4/1000
iSec5 = iMs5/1000

sounddirectory$ = sounddir1$ + sounddir2$

Read from file... 'sounddirectory$'\'base$'.wav
Read from file... 'sounddirectory$'\'base$'.TextGrid

##select the TextGrid and get its end time and thus total duration
select TextGrid 'base$'
totalDur = Get end time
	
##check how many intervals there are in the selected tier:
numberOfIntervals = Get number of intervals... tier

	##extract interval duration measures from the tier:
	for interval from 1 to numberOfIntervals
		label$ = Get label of interval... tier interval
		if label$ = interval1$
			iStart1 = Get starting point... tier interval
			iEnd1 = Get end point... tier interval
			iDuration1 = iEnd1 - iStart1
		endif
		if label$ = interval2$
			iStart2 = Get starting point... tier interval
			iEnd2 = Get end point... tier interval
			iDuration2 = iEnd2 - iStart2
		endif
		if label$ = interval3$
			iStart3 = Get starting point... tier interval
			iEnd3 = Get end point... tier interval
			iDuration3 = iEnd3 - iStart3
		endif
		if label$ = interval4$
			iStart4 = Get starting point... tier interval
			iEnd4 = Get end point... tier interval
			iDuration4 = iEnd4 - iStart4
		endif
		if label$ = interval5$
			iStart5 = Get starting point... tier interval
			iEnd5 = Get end point... tier interval
			iDuration5 = iEnd5 - iStart5
		endif
	endfor

printline ----------------------------------------
printline Processing file 'base$'.wav
printline Original first interval duration = 'iDuration1:3'
printline New first interval duration = 'iSec1'
printline Original second interval duration = 'iDuration2:3'
printline New second interval duration = 'iSec2'
printline Original third interval duration = 'iDuration3:3'
printline New third interval duration = 'iSec3'
printline Original fourth interval duration = 'iDuration4:3'
printline New fourth interval duration = 'iSec4'
printline Original fifth interval duration = 'iDuration5:3'
printline New fifth interval duration = 'iSec5'

##calculate scaling ratio to get new interval duration from old
scaleRatio1 = iSec1/iDuration1
printline Scaling ratio for first interval = 'scaleRatio1:3'
scaleRatio2 = iSec2/iDuration2
printline Scaling ratio for second interval = 'scaleRatio2:3'
scaleRatio3 = iSec3/iDuration3
printline Scaling ratio for third interval = 'scaleRatio3:3'
scaleRatio4 = iSec4/iDuration4
printline Scaling ratio for fourth interval = 'scaleRatio4:3'
scaleRatio5 = iSec5/iDuration5
printline Scaling ratio for fifth interval = 'scaleRatio5:3'

##select the Sound and make a Manipulation object:
select Sound 'base$'
To Manipulation... 0.01 75 600	

##make a new duration tier and delimit the manipulation interval
select Sound 'base$'
Create DurationTier... 'base$'_'iMs1' 0 totalDur
Add point... 0.000 1
Add point... iStart1 1
Add point... iStart1+0.00001 scaleRatio1
Add point... iEnd1 scaleRatio1
Add point... iEnd1+0.00001 scaleRatio1
Add point... iStart2+0.000011 scaleRatio2
Add point... iEnd2-0.00001 scaleRatio2
Add point... iEnd2 scaleRatio2
Add point... iStart3+0.000011 scaleRatio3
Add point... iEnd3-0.000011 scaleRatio3
Add point... iEnd3 scaleRatio3
Add point... iStart4+0.000011 scaleRatio4
Add point... iEnd4-0.000011 scaleRatio4
Add point... iEnd4 scaleRatio4
Add point... iStart5+0.000011 scaleRatio5
Add point... iEnd5-0.000011 scaleRatio5
Add point... iEnd5-0.00001 1	
Add point... totalDur 1

##select Manipulation object and replace its Duration tier with the new one
select DurationTier 'base$'_'iMs1'
plus Manipulation 'base$'
Replace duration tier

##resynthesise and save
select Manipulation 'base$'
Get resynthesis (overlap-add)
Write to WAV file... 'sounddirectory$'\'base$'_'iMs1'.wav

##play the result for checking 
select Sound 'base$'
Play

##clean up by removing the temporary objects from the object list
select Sound 'base$'
plus TextGrid 'base$'
plus Manipulation 'base$'
plus DurationTier 'base$'_'iMs1'
Remove

printline Saving new sound file 'base$'_'iMs1'.wav
printline ----------------------------------------
